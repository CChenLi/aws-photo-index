{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Cloud architecture for photo upload and search engine Deployed on AWS",
    "Parameters": {
        "ApikeyID": {
            "Type": "String",
            "Default": "4as8vlztp4",
            "Description": "The API KEY ID for API Gateway state. The corresponding API key is required to make request to API"
        },
        "EsKmsKeyId": {
            "Type": "String",
            "Default": "62ae07ef-0b1f-450c-9f94-1455357359fc",
            "Description": "AWS Key Management Service, specify the key assign to elasticsearch"
        },
        "SourceBucket": {
            "Type": "String",
            "Default": "cloudformation-source-chenli",
            "Description": "The bucket where the source code and spec files are specified"
        }
    },
    "Resources": {
        "indexPhoto": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "SourceBucket"
                    },
                    "S3Key": "LF1.zip"
                },
                "Description": "LF1 indexing uploaded photo",
                "Tags": [
                    {
                        "Value": "Chen Li",
                        "Key": "lambda:createdBy"
                    }
                ],
                "MemorySize": 128,
                "Environment": {
                    "Variables": {
                        "REGION": "us-east-1",
                        "ES_END": {
                            "Fn::GetAtt": [
                                "ESInstance",
                                "DomainEndpoint"
                            ]
                        }
                    }
                },
                "Handler": "lambda_function.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "ProjectMaster",
                        "Arn"
                    ]
                },
                "Timeout": 30,
                "Runtime": "python3.8",
                "FunctionName": "LF1-FROMCF"
            }
        },
        "searchPhotos": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "SourceBucket"
                    },
                    "S3Key": "LF2.zip"
                },
                "Description": "LF2 search photo",
                "Tags": [
                    {
                        "Value": "Chen Li",
                        "Key": "lambda:createdBy"
                    }
                ],
                "MemorySize": 128,
                "Environment": {
                    "Variables": {
                        "REGION": "us-east-1",
                        "ES_END": {
                            "Fn::GetAtt": [
                                "ESInstance",
                                "DomainEndpoint"
                            ]
                        },
                        "S3": {
                            "Fn::GetAtt": [
                                "photosBucket",
                                "DomainName"
                            ]
                        }
                    }
                },
                "Handler": "lambda_function.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "ProjectMaster",
                        "Arn"
                    ]
                },
                "Timeout": 30,
                "Runtime": "python3.8",
                "FunctionName": "LF2-FROMCF"
            }
        },
        "ServerlessRestApiDeploymentb2888a1f04": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "RestApiId": {
                    "Ref": "ServerlessRestApi"
                },
                "Description": "RestApi deployment",
                "StageName": "Alpha"
            }
        },
        "ServerlessRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "CLOUDFORMATION AI Photo Search",
                "Parameters": {
                    "endpointConfigurationTypes": "REGIONAL"
                },
                "Body": {
                    "openapi": "3.0.1",
                    "info": {
                        "title": "CLOUDFORMATION AI Photo Search",
                        "description": "AI Photo Search application, built during the Cloud and Big Data course at Columbia University.",
                        "version": "1.0.0"
                    },
                    "servers": [
                        {
                            "url": "https://gens1kuin3.execute-api.us-east-1.amazonaws.com/{basePath}",
                            "variables": {
                                "basePath": {
                                    "default": "/v1"
                                }
                            }
                        }
                    ],
                    "paths": {
                        "/search": {
                            "get": {
                                "operationId": "searchPhotos",
                                "parameters": [
                                    {
                                        "name": "q",
                                        "in": "query",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ],
                                "responses": {
                                    "500": {
                                        "description": "500 response",
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/Error"
                                                }
                                            }
                                        }
                                    },
                                    "200": {
                                        "description": "200 response",
                                        "headers": {
                                            "Access-Control-Allow-Origin": {
                                                "schema": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/SearchResponse"
                                                }
                                            }
                                        }
                                    },
                                    "403": {
                                        "description": "403 response",
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/Error"
                                                }
                                            }
                                        }
                                    }
                                },
                                "security": [
                                    {
                                        "api_key": []
                                    }
                                ],
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${searchPhotos.Arn}/invocations"
                                    },
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "##  See http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html\n##  This template will pass through all parameters including path, querystring, header, stage variables, and context through to the integration endpoint via the body/payload\n#set($allParams = $input.params())\n{\n\"body-json\" : $input.json('$'),\n\"params\" : {\n#foreach($type in $allParams.keySet())\n    #set($params = $allParams.get($type))\n\"$type\" : {\n    #foreach($paramName in $params.keySet())\n    \"$paramName\" : \"$util.escapeJavaScript($params.get($paramName))\"\n        #if($foreach.hasNext),#end\n    #end\n}\n    #if($foreach.hasNext),#end\n#end\n},\n\"stage-variables\" : {\n#foreach($key in $stageVariables.keySet())\n\"$key\" : \"$util.escapeJavaScript($stageVariables.get($key))\"\n    #if($foreach.hasNext),#end\n#end\n},\n\"context\" : {\n    \"account-id\" : \"$context.identity.accountId\",\n    \"api-id\" : \"$context.apiId\",\n    \"api-key\" : \"$context.identity.apiKey\",\n    \"authorizer-principal-id\" : \"$context.authorizer.principalId\",\n    \"caller\" : \"$context.identity.caller\",\n    \"cognito-authentication-provider\" : \"$context.identity.cognitoAuthenticationProvider\",\n    \"cognito-authentication-type\" : \"$context.identity.cognitoAuthenticationType\",\n    \"cognito-identity-id\" : \"$context.identity.cognitoIdentityId\",\n    \"cognito-identity-pool-id\" : \"$context.identity.cognitoIdentityPoolId\",\n    \"http-method\" : \"$context.httpMethod\",\n    \"stage\" : \"$context.stage\",\n    \"source-ip\" : \"$context.identity.sourceIp\",\n    \"user\" : \"$context.identity.user\",\n    \"user-agent\" : \"$context.identity.userAgent\",\n    \"user-arn\" : \"$context.identity.userArn\",\n    \"request-id\" : \"$context.requestId\",\n    \"resource-id\" : \"$context.resourceId\",\n    \"resource-path\" : \"$context.resourcePath\"\n    }\n}\n"
                                    },
                                    "passthroughBehavior": "when_no_templates",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws"
                                }
                            },
                            "options": {
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "headers": {
                                            "Access-Control-Allow-Origin": {
                                                "schema": {
                                                    "type": "string"
                                                }
                                            },
                                            "Access-Control-Allow-Methods": {
                                                "schema": {
                                                    "type": "string"
                                                }
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "schema": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "content": {}
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        },
                        "/upload": {
                            "put": {
                                "operationId": "uploadPhoto",
                                "parameters": [
                                    {
                                        "name": "object",
                                        "in": "query",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "folder",
                                        "in": "query",
                                        "schema": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "name": "x-amz-meta-customLabels",
                                        "in": "header",
                                        "schema": {
                                            "type": "string"
                                        }
                                    }
                                ],
                                "responses": {
                                    "500": {
                                        "description": "500 response",
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/Error"
                                                }
                                            }
                                        }
                                    },
                                    "200": {
                                        "description": "200 response",
                                        "headers": {
                                            "Access-Control-Allow-Origin": {
                                                "schema": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/MODEL00d7b1"
                                                }
                                            }
                                        }
                                    },
                                    "403": {
                                        "description": "403 response",
                                        "content": {
                                            "application/json": {
                                                "schema": {
                                                    "$ref": "#/components/schemas/Error"
                                                }
                                            }
                                        }
                                    }
                                },
                                "security": [
                                    {
                                        "api_key": []
                                    }
                                ],
                                "x-amazon-apigateway-integration": {
                                    "credentials": {
                                        "Fn::GetAtt": [
                                            "ProjectMaster",
                                            "Arn"
                                        ]
                                    },
                                    "httpMethod": "PUT",
                                    "uri": "arn:aws:apigateway:us-east-1:s3:path/{bucket}/{key}",
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                                            }
                                        }
                                    },
                                    "requestParameters": {
                                        "integration.request.header.x-amz-meta-customLabels": "method.request.header.x-amz-meta-customLabels",
                                        "integration.request.path.key": "method.request.querystring.object",
                                        "integration.request.path.bucket": "method.request.querystring.folder"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "aws"
                                }
                            },
                            "options": {
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "headers": {
                                            "Access-Control-Allow-Origin": {
                                                "schema": {
                                                    "type": "string"
                                                }
                                            },
                                            "Access-Control-Allow-Methods": {
                                                "schema": {
                                                    "type": "string"
                                                }
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "schema": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "content": {}
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT'",
                                                "method.response.header.Access-Control-Allow-Headers": "'x-amz-meta-customLabels,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                                            }
                                        }
                                    },
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "type": "mock"
                                }
                            }
                        }
                    },
                    "components": {
                        "schemas": {
                            "Error": {
                                "type": "object",
                                "properties": {
                                    "code": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "message": {
                                        "type": "string"
                                    }
                                }
                            },
                            "Photo": {
                                "type": "object",
                                "properties": {
                                    "url": {
                                        "type": "string"
                                    },
                                    "labels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "MODEL00d7b1": {
                                "type": "object"
                            },
                            "SearchResponse": {
                                "type": "object",
                                "properties": {
                                    "results": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Photo"
                                        }
                                    }
                                }
                            }
                        },
                        "securitySchemes": {
                            "api_key": {
                                "type": "apiKey",
                                "name": "x-api-key",
                                "in": "header"
                            }
                        }
                    },
                    "x-amazon-apigateway-binary-media-types": [
                        "image/jpeg",
                        "image/png"
                    ]
                }
            }
        },
        "usagePlan": {
            "Type": "AWS::ApiGateway::UsagePlan",
            "DependsOn": [
                "ServerlessRestApiDeploymentb2888a1f04"
            ],
            "Properties": {
                "ApiStages": [
                    {
                        "ApiId": {
                            "Ref": "ServerlessRestApi"
                        },
                        "Stage": "Alpha"
                    }
                ],
                "Description": "Basic plan",
                "Quota": {
                    "Limit": 10000,
                    "Period": "MONTH"
                },
                "Throttle": {
                    "BurstLimit": 5000,
                    "RateLimit": 10000
                },
                "UsagePlanName": "Basic plan"
            }
        },
        "usagePlanKey": {
            "Type": "AWS::ApiGateway::UsagePlanKey",
            "Properties": {
                "KeyId": {
                    "Ref": "ApikeyID"
                },
                "KeyType": "API_KEY",
                "UsagePlanId": {
                    "Ref": "usagePlan"
                }
            }
        },
        "searchPhotosLambdaAPIPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "FunctionName": {
                    "Ref": "searchPhotos"
                },
                "SourceAccount": {
                    "Ref": "AWS::AccountId"
                },
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/search",
                        {
                            "__Stage__": "*",
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            }
                        }
                    ]
                }
            }
        },
        "indexphotosPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "Principal": "s3.amazonaws.com",
                "FunctionName": {
                    "Ref": "indexPhoto"
                },
                "SourceAccount": {
                    "Ref": "AWS::AccountId"
                },
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:s3:::",
                            {
                                "Fn::Sub": "photos-bucket-fromcf-${AWS::StackName}"
                            }
                        ]
                    ]
                }
            }
        },
        "photosBucket": {
            "Type": "AWS::S3::Bucket",
            "DependsOn": [
                "indexphotosPermission"
            ],
            "Properties": {
                "BucketName": {
                    "Fn::Sub": "photos-bucket-fromcf-${AWS::StackName}"
                },
                "PublicAccessBlockConfiguration": {
                    "BlockPublicAcls": false,
                    "BlockPublicPolicy": false,
                    "IgnorePublicAcls": false,
                    "RestrictPublicBuckets": false
                },
                "NotificationConfiguration": {
                    "LambdaConfigurations": [
                        {
                            "Event": "s3:ObjectCreated:*",
                            "Function": {
                                "Fn::GetAtt": [
                                    "indexPhoto",
                                    "Arn"
                                ]
                            }
                        }
                    ]
                }
            }
        },
        "photoBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
                "Bucket": {
                    "Ref": "photosBucket"
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "PublicRead",
                            "Effect": "Allow",
                            "Principal": "*",
                            "Action": "s3:GetObject",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:s3:::",
                                        {
                                            "Ref": "photosBucket"
                                        },
                                        "/*"
                                    ]
                                ]
                            }
                        }
                    ]
                }
            }
        },
        "ESInstance": {
            "Type": "AWS::OpenSearchService::Domain",
            "Properties": {
                "DomainName": "cloudform-esr",
                "DomainEndpointOptions": {
                    "EnforceHTTPS": true
                },
                "AccessPolicies": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": "*"
                            },
                            "Action": "es:*",
                            "Resource": {
                                "Fn::Sub": "arn:aws:iam:${AWS::AccountId}:domain/cloudform-esr/*"
                            }
                        }
                    ]
                },
                "ClusterConfig": {
                    "InstanceType": "t3.small.search",
                    "InstanceCount": 1
                },
                "EBSOptions": {
                    "EBSEnabled": true,
                    "VolumeSize": 10,
                    "VolumeType": "gp2"
                },
                "NodeToNodeEncryptionOptions": {
                    "Enabled": true
                },
                "EncryptionAtRestOptions": {
                    "Enabled": true,
                    "KmsKeyId": {
                        "Ref": "EsKmsKeyId"
                    }
                },
                "AdvancedSecurityOptions": {
                    "Enabled": true,
                    "InternalUserDatabaseEnabled": false,
                    "MasterUserOptions": {
                        "MasterUserARN": {
                            "Fn::GetAtt": [
                                "ProjectMaster",
                                "Arn"
                            ]
                        }
                    }
                }
            }
        },
        "ProjectMaster": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Description": "Master role for the project",
                "RoleName": "photoMaster",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "apigateway.amazonaws.com",
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    "arn:aws:iam::aws:policy/AmazonLexFullAccess",
                    "arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess",
                    "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
                    "arn:aws:iam::aws:policy/CloudWatchFullAccess",
                    "arn:aws:iam::aws:policy/AmazonRekognitionFullAccess",
                    "arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator",
                    "arn:aws:iam::aws:policy/AmazonOpenSearchServiceFullAccess"
                ]
            }
        }
    }
}